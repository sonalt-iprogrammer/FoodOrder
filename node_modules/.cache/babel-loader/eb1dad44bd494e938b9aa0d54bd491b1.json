{"ast":null,"code":"var _jsxFileName = \"/home/sonal/ReactProjects/FoodOrder/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './Cart-Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\n_c = CartReducer;\n\nconst CartProvider = props => {\n  _s();\n\n  console.log( /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this));\n  const [cartState, dispatchCartAction] = useReducer(CartReducer, defaultCartState);\n\n  const addCartItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeCartItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const CartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addCartItemHandler,\n    removeItem: removeCartItemHandler\n  };\n  console.log(CartContext);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c2 = CartProvider;\nconsole.log(CartContext);\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"sources":["/home/sonal/ReactProjects/FoodOrder/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","CartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","console","log","children","cartState","dispatchCartAction","addCartItemHandler","removeCartItemHandler","id","addItem","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACtBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAEA,WAAO;AACLX,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAXD;;KAAMG,W;;AAaN,MAAMU,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAEhCC,EAAAA,OAAO,CAACC,GAAR,eAAY,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEjB,WAA7B;AAAA,cACPe,KAAK,CAACG;AADC;AAAA;AAAA;AAAA;AAAA,UAAZ;AAGE,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMoB,kBAAkB,GAAIX,IAAD,IAAU;AACnCU,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMY,qBAAqB,GAAIC,EAAD,IAAQ;AACpCH,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,QAAR;AAAkBgB,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMvB,WAAW,GAAG;AAClBE,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADC;AAElBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFL;AAGlBqB,IAAAA,OAAO,EAAEH,kBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAMFN,EAAAA,OAAO,CAACC,GAAR,CAAajB,WAAb;AACE,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,WAA7B;AAAA,cACGe,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9BD;;GAAMJ,Y;;MAAAA,Y;AAgCNE,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AACA,eAAec,YAAf","sourcesContent":["import React, { useReducer } from 'react'\nimport CartContext from './Cart-Context'\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n}\n\nconst CartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item)\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState\n}\n\nconst CartProvider = (props) => {\n\nconsole.log(<CartContext.Provider value={CartContext}>\n    {props.children}\n  </CartContext.Provider>);\n  const [cartState, dispatchCartAction] = useReducer(\n    CartReducer,\n    defaultCartState,\n  )\n\n  const addCartItemHandler = (item) => {\n    dispatchCartAction({ type: 'ADD', item: item })\n  }\n  const removeCartItemHandler = (id) => {\n    dispatchCartAction({ type: 'REMOVE', id: id })\n  }\n\n  const CartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addCartItemHandler,\n    removeItem: removeCartItemHandler,\n  }\nconsole.log( CartContext)\n  return (\n    <CartContext.Provider value={CartContext}>\n      {props.children}\n    </CartContext.Provider>\n  )\n \n}\n\nconsole.log(CartContext )\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}