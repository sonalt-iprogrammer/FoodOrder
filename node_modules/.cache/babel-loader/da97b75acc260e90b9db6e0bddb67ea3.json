{"ast":null,"code":"var _jsxFileName = \"/home/sonal/ReactProjects/FoodOrder/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\n_c = CartReducer;\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(CartReducer, defaultCartState);\n\n  const addCartItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeCartItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const CartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addCartItemHandler,\n    removeItem: removeCartItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"sources":["/home/sonal/ReactProjects/FoodOrder/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","CartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addCartItemHandler","removeCartItemHandler","id","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAMA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAe,KAAlB,EAAwB;AACpB,UAAMC,YAAY,GAACH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAnB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAmBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAkBN,MAAM,CAACI,IAAP,CAAYG,MAA5E;AACA,WAAM;AACFX,MAAAA,KAAK,EAACM,YADJ;AAEFL,MAAAA,WAAW,EAACQ;AAFV,KAAN;AAIH;;AACD,SAAOV,gBAAP;AAGH,CAZD;;KAAMG,W;;AAcN,MAAMU,YAAY,GAAEC,KAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAA+BlB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAA/C;;AAEA,QAAMiB,kBAAkB,GAAER,IAAD,IAAQ;AAC7BO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,KAAN;AAAYG,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMS,qBAAqB,GAAEC,EAAD,IAAM;AAC9BH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAea,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AAEH,GAHD;;AAKA,QAAMpB,WAAW,GAAE;AACfE,IAAAA,KAAK,EAAGc,SAAS,CAACd,KADH;AAEnBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFJ;AAGnBkB,IAAAA,OAAO,EAAEH,kBAHU;AAInBI,IAAAA,UAAU,EAAEH;AAJO,GAAnB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAA,cACKJ,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBD;;GAAMT,Y;;MAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React,{useReducer} from \"react\";\nimport CartContext from \"./Cart-Context\";\n\nconst defaultCartState = {\n    items:[],\n    totalAmount:0,\n\n};\n\nconst CartReducer=(state,action)=>{\n    if(action.type ==='ADD'){\n        const updatedItems=state.items.concat(action.item);\n        const updatedTotalAmount = state.totalAmount +action.item.price*action.item.amount;\n        return{\n            items:updatedItems,\n            totalAmount:updatedTotalAmount\n        };\n    }\n    return defaultCartState;\n\n\n};\n\nconst CartProvider=(props)=>{\n    const [cartState,dispatchCartAction]=useReducer(CartReducer,defaultCartState);\n\n    const addCartItemHandler=(item)=>{\n        dispatchCartAction({type:'ADD',item:item});\n    };\n    const removeCartItemHandler=(id)=>{\n        dispatchCartAction({type:'REMOVE',id:id});\n\n    };\n\n    const CartContext ={\n        items : cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addCartItemHandler,\n    removeItem: removeCartItemHandler\n    };\n\n    return(\n        <CartContext.Provider>\n            {props.children}\n        </CartContext.Provider>\n    );\n\n};\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}